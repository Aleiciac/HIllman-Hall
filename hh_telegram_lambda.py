# -*- coding: utf-8 -*-
"""hh_telegram_lambda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Aleiciac/29ec82bc2893da461d4f6c513b8dd95d/hh_telegram_lambda.ipynb
"""

import json

def lambda_handler(event, context):
    print(event)
    try:
        body=json.loads(event['body'])

        print(body)

        message_part=body['message'].get('text')
        print("Message part : {}".format(message_part))

        data = {'url': message_part}

        payload=requests.post('https://cleanurl.com/api/v1/shorten',data=data)
        short_url=payload.json()['result_url']
        print("The short url is : {}".format(short_url))

        chat_id=body['message']['chat']['id']

        url = f'https://api.telegram.org/bot8114877429:AAEL5M1v_JhrFg72Mxh5ViucuhITnkiB600/sendMessage'
        payload = {
            'chat_id': chat_id,
            'text': short_url
            }

        r = requests.post(url,json=payload)

        return {
            "statusCode": 200
            }

    except Exception as e:
        print(e)
        return {
            "statusCode": 500
        }


!pip install python-telegram-bot --upgrade
from typing import final
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import asyncio

TOKEN: final = '8114877429:AAEL5M1v_JhrFg72Mxh5ViucuhITnkiB600'
BOT_USERNAME: final = '@TheyardHH_bot'

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
  await update.message.reply_text('Welcome to The Yard, Hillman Hall’s hub for meaningful discussions. This is a safe space to discuss social and cultural issues. Look forward to Media Monday, Hot Take Wednesdays, Future Vision Friday, and Reflection Sunday.      **All users must adhere to the House Rules. Please review the guidelines by typing /help in the chat.**')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
  await update.message.reply_text('Welcome to the Hillman Hall community! We’re excited to have you here as we build a strong network grounded in respect, unity, and cultural pride. To keep this a positive and supportive environment, please adhere to the following House Rules.\n\n1. Respectful Communication\n\nTreat everyone with respect, kindness, and consideration. This includes refraining from insults, discriminatory language, or other forms of disrespect.\nEngage thoughtfully. Constructive criticism and healthy debate are encouraged but must remain polite.\n\n2. Inclusivity and Cultural Sensitivity\n\nHillman Hall is a community dedicated to celebrating and connecting Black people worldwide. Avoid language, media, or jokes that could be offensive or insensitive.\nRemember that we all come from different backgrounds and experiences. Stay open-minded and empathetic.\n\n3. Privacy and Confidentiality\n\nDo not share personal information about other members or screenshots from this community without consent.\nConversations held here are meant to foster trust and connection. Please respect each other’s privacy.\n\n4. No Excessive Self-Promotion or Spamming\n\nAvoid spamming, excessive self-promotion, or unsolicited links. All posts should contribute value to the group.\nIf you wish to share your business or services, please wait for designated sharing days or follow any specific sharing guidelines provided.\n\n5. Constructive Feedback and Conflict Resolution\n\nUse feedback channels for any issues with the community or its guidelines. Avoid public confrontations.\nFor any disputes between members, try to resolve them privately. If needed, contact a community moderator for assistance.\n\n6. Engagement and Contribution\n\nActively participate in discussions, share insights, and help foster a vibrant community.\nThis is your space to collaborate, learn, and grow together. Use it to the fullest!\n\nPenalties for Breaking Community Guidelines\n\nTo maintain a safe and enjoyable space for everyone, Hillman Hall has a zero-tolerance policy for guideline violations. Penalties may include:\n\nFirst Violation: A private warning from a moderator.\nSecond Violation: Temporary suspension from the community.\nThird Violation: Permanent removal from the community.\n\nSevere Violations (e.g., hate speech, harassment, or privacy breaches) will result in immediate removal without warning.\n\nThank you for helping make Hillman Hall a thriving community! Let’s continue to build a network rooted in respect, empowerment, and unity.')

# Responses

def handle_response(text: str) -> str:

    p_message = text.lower()

    if 'hello' in p_message:
        return 'Hey there!'

    if 'how are you' in p_message:
        return 'I am good!'


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_type: str = update.message.chat.type
    text: str = update.message.text

    print(f'user({update.message.chat.id}) in {message_type}:')

    response: str = handle_response(text)
    await update.message.reply_text(response)


async def error(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f'Update {update} caused error {context.error}')


if __name__ == '__main__':
    print('Starting bot...')
    application = Application.builder().token(TOKEN).build()

    # Commands
    application.add_handler(CommandHandler('start', start_command))
    application.add_handler(CommandHandler('help', help_command))

    # Messages
    application.add_handler(MessageHandler(filters.TEXT, handle_message))

    # Errors
    application.add_error_handler(error)

    async def run_bot():
        await application.initialize()
        await application.start()
        await application.updater.idle()

    asyncio.run_coroutine_threadsafe(run_bot(), asyncio.get_event_loop())

    print('Bot is running in the background.')